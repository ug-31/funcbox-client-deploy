{"version":3,"sources":["components/Navigation.js","components/Login.js","components/Register.js","components/Dashboard.jsx","components/ListBucket.js","App.js","index.js"],"names":["Navigation","setAuth","isAuthenticated","className","href","id","onClick","e","preventDefault","localStorage","removeItem","toast","success","Login","useState","email","password","inputs","setInputs","handleChange","target","name","value","onSubmitForm","a","body","fetch","method","headers","JSON","stringify","response","json","parseRes","token","setItem","console","error","message","onSubmit","htmlFor","type","placeholder","onChange","Register","Dashboard","setName","bname","text","getName","status","useEffect","rows","cols","ListBucket","buckets","setBuckets","getBuckets","log","map","bucket","_id","configure","App","setIsAuthenticated","Boolean","isAuth","exact","path","render","props","to","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d3a0ec0.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Navigation = ({ setAuth, isAuthenticated }) => {\r\n  const onClickLogout = (e) => {\r\n    e.preventDefault();\r\n    localStorage.removeItem(\"token\");\r\n    setAuth(false);\r\n    toast.success(\"You Loggedout successfully\");\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <a className=\"navbar-brand\" href=\"/funcbox-client-deploy/#/dashboard\">\r\n          Dashboard\r\n        </a>\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item active\">\r\n            <a className=\"nav-link\" href=\"/funcbox-client-deploy/#/bucket\">\r\n              Bucket <span className=\"sr-only\">(current)</span>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n\r\n        <div\r\n          className=\" navbar-collapse w-50 order-1 dual-collapse2\"\r\n          // className=\"collapse navbar-collapse w-100 order-3 dual-collapse2\"\r\n          id=\"navbarSupportedContent\"\r\n        >\r\n          <ul className=\"nav navbar-nav ml-auto\">\r\n            <li className=\"nav-item active\">\r\n              {!isAuthenticated === true && (\r\n                <a className=\"nav-link\" href=\"/funcbox-client-deploy/#/login\">\r\n                  Login <span className=\"sr-only\">(current)</span>\r\n                </a>\r\n              )}\r\n            </li>\r\n            <li className=\"nav-item active\">\r\n              {!isAuthenticated === true && (\r\n                <a\r\n                  className=\"nav-link\"\r\n                  href=\"/funcbox-client-deploy/#/register\"\r\n                >\r\n                  Register\r\n                </a>\r\n              )}\r\n            </li>\r\n\r\n            <li className=\"nav-item active\">\r\n              {isAuthenticated === true && (\r\n                <a className=\"nav-link\" href=\"/login\" onClick={onClickLogout}>\r\n                  Logout\r\n                </a>\r\n              )}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport \"./form.css\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Login = ({ setAuth }) => {\r\n  const [inputs, setInputs] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const resetInputValue = () => {\r\n    setInputs({ ...inputs, password: \"\" });\r\n  };\r\n\r\n  const onSubmitForm = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = { email, password };\r\n      const response = await fetch(\r\n        \"https://ug31-funcbox-server.herokuapp.com/auth/login\",\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n\r\n      const parseRes = await response.json();\r\n\r\n      if (parseRes.token) {\r\n        localStorage.setItem(\"token\", parseRes.token);\r\n        setAuth(true);\r\n\r\n        toast.success(\"Logged in successfully!\");\r\n      } else {\r\n        console.error(parseRes);\r\n        toast.error(parseRes);\r\n        resetInputValue();\r\n      }\r\n    } catch (err) {\r\n      setAuth(false);\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const { email, password } = inputs;\r\n\r\n  return (\r\n    <Fragment>\r\n      <form className=\"login-form\" onSubmit={onSubmitForm}>\r\n        <h3 className=\"text-center\">Login</h3>\r\n        <div className=\"form-group \">\r\n          <label htmlFor=\"email\">Email address</label>\r\n          <input\r\n            name=\"email\"\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            id=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-success btn-block\">\r\n          Login\r\n        </button>\r\n        <br />\r\n        <a href=\"/funcbox-client-deploy/#/register\">\r\n          Don't Have an Account? Register Here\r\n        </a>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport \"./form.css\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Register = ({ setAuth }) => {\r\n  const [inputs, setInputs] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const resetInputValue = () => {\r\n    setInputs({ ...inputs, password: \"\" });\r\n  };\r\n\r\n  const onSubmitForm = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = { name, email, password };\r\n      const response = await fetch(\r\n        \"https://ug31-funcbox-server.herokuapp.com/auth/register\",\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n\r\n      const parseRes = await response.json();\r\n\r\n      if (parseRes.token) {\r\n        localStorage.setItem(\"token\", parseRes.token);\r\n        setAuth(true);\r\n\r\n        toast.success(\"Successfully Registered\");\r\n      } else {\r\n        setAuth(false);\r\n        toast.error(parseRes);\r\n        resetInputValue();\r\n      }\r\n    } catch (err) {\r\n      console.error(err.message);\r\n      toast.error(\"Some error\");\r\n    }\r\n  };\r\n\r\n  const { name, email, password } = inputs;\r\n\r\n  return (\r\n    <Fragment>\r\n      <form className=\"login-form\" onSubmit={onSubmitForm}>\r\n        <h3 className=\"text-center\">Register</h3>\r\n        <div className=\"form-group \">\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input\r\n            name=\"name\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"name\"\r\n            placeholder=\"Enter name\"\r\n            value={name}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group \">\r\n          <label htmlFor=\"email\">Email address</label>\r\n          <input\r\n            name=\"email\"\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            id=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-success btn-block\">\r\n          Register\r\n        </button>\r\n        <br />\r\n        <a href=\"/funcbox-client-deploy/#/login\">\r\n          Already Signed up? Click here to Login\r\n        </a>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Dashboard = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [inputs, setInputs] = useState({\r\n    bname: \"\",\r\n    text: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const clearInputField = () => {\r\n    setInputs({ ...inputs, text: \"\" });\r\n  };\r\n\r\n  const getName = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        \"https://ug31-funcbox-server.herokuapp.com/dashboard/\",\r\n        {\r\n          method: \"GET\",\r\n          headers: { token: localStorage.token },\r\n        }\r\n      );\r\n\r\n      const parseRes = await response.json();\r\n\r\n      setName(parseRes);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  const onSubmitForm = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = { bname, text };\r\n      const response = await fetch(\r\n        \"https://ug31-funcbox-server.herokuapp.com/dashboard\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            token: localStorage.token,\r\n          },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n\r\n      const parseRes = await response.json();\r\n\r\n      if (response.status !== 200) {\r\n        toast.error(parseRes);\r\n      } else {\r\n        toast.success(parseRes);\r\n      }\r\n      clearInputField();\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getName();\r\n  }, []);\r\n\r\n  const { bname, text } = inputs;\r\n\r\n  return (\r\n    <Fragment>\r\n      <Fragment>\r\n        <form className=\"login-form\" onSubmit={onSubmitForm}>\r\n          <h3 className=\"text-center\">Hello, {name}</h3>\r\n\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"bname\">Bucket Name</label>\r\n            <input\r\n              name=\"bname\"\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"bname\"\r\n              placeholder=\"Enter Bucket Name\"\r\n              value={bname}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"text\">Input Text</label>\r\n            <textarea\r\n              name=\"text\"\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"text\"\r\n              placeholder=\"Input Text\"\r\n              rows=\"10\"\r\n              cols=\"30\"\r\n              value={text}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-success btn-block\">\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </Fragment>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst ListBucket = ({ isAuthenticated }) => {\r\n  const [buckets, setBuckets] = useState([]);\r\n\r\n  const getBuckets = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        \"https://ug31-funcbox-server.herokuapp.com/dashboard/bucket\",\r\n        {\r\n          method: \"GET\",\r\n          headers: { token: localStorage.token },\r\n        }\r\n      );\r\n\r\n      const parseRes = await response.json();\r\n\r\n      if (parseRes.name) {\r\n        setBuckets(parseRes.buckets);\r\n        toast.success(\"Buckets Fetched Successfully\");\r\n      } else {\r\n        toast.error(\"Please Login to view your Buckets\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBuckets();\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      {\" \"}\r\n      <table className=\"table mt-5 text-center\">\r\n        <thead>\r\n          <tr>\r\n            <th>Bucket Name</th>\r\n            <th>Text</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {isAuthenticated === true &&\r\n            buckets.map((bucket) => (\r\n              <tr key={bucket._id}>\r\n                <td>{bucket.bname}</td>\r\n                <td>{bucket.text}</td>\r\n              </tr>\r\n            ))}\r\n        </tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ListBucket;\r\n","import \"./App.css\";\r\nimport React, { Fragment, useState, useEffect } from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport Navbar from \"./components/Navigation.js\";\r\nimport Login from \"./components/Login.js\";\r\nimport Register from \"./components/Register\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport ListBucket from \"./components/ListBucket\";\r\n\r\ntoast.configure();\r\n\r\nfunction App() {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  const setAuth = (Boolean) => {\r\n    setIsAuthenticated(Boolean);\r\n  };\r\n\r\n  const isAuth = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        \"https://ug31-funcbox-server.herokuapp.com/auth/verify\",\r\n        {\r\n          method: \"GET\",\r\n          headers: { token: localStorage.token },\r\n        }\r\n      );\r\n\r\n      const parseRes = await response.json();\r\n\r\n      console.log(parseRes);\r\n\r\n      parseRes === true ? setIsAuthenticated(true) : setIsAuthenticated(false);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    isAuth();\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <Navbar setAuth={setAuth} isAuthenticated={isAuthenticated} />\r\n      <Switch>\r\n        <Fragment>\r\n          <ToastContainer />\r\n\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            render={(props) =>\r\n              !isAuthenticated ? (\r\n                <Login {...props} setAuth={setAuth} />\r\n              ) : (\r\n                <Redirect to=\"/dashboard\" />\r\n              )\r\n            }\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/login\"\r\n            render={(props) =>\r\n              !isAuthenticated ? (\r\n                <Login {...props} setAuth={setAuth} />\r\n              ) : (\r\n                <Redirect to=\"/dashboard\" />\r\n              )\r\n            }\r\n          />\r\n\r\n          <Route\r\n            exact\r\n            path=\"/dashboard\"\r\n            render={(props) =>\r\n              isAuthenticated ? (\r\n                <Dashboard {...props} setAuth={setAuth} />\r\n              ) : (\r\n                <Redirect to=\"/login\" />\r\n              )\r\n            }\r\n          />\r\n\r\n          <Route\r\n            exact\r\n            path=\"/register\"\r\n            render={(props) =>\r\n              !isAuthenticated ? (\r\n                <Register {...props} setAuth={setAuth} />\r\n              ) : (\r\n                <Redirect to=\"/login\" />\r\n              )\r\n            }\r\n          />\r\n\r\n          <Route\r\n            exact\r\n            path=\"/bucket\"\r\n            render={(props) => (\r\n              <ListBucket\r\n                {...props}\r\n                setAuth={setAuth}\r\n                isAuthenticated={isAuthenticated}\r\n              />\r\n            )}\r\n          />\r\n        </Fragment>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}